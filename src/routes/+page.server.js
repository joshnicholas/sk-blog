// import { posts } from '$lib/data/posts'

// /** @type {import('./$types').PageServerLoad} */
// export async function load() {
//   return {
//     posts: posts.slice(0, 5)
//   }
// }

export const prerender = true;

/** @type {import('./$types').PageLoad} */
export async function load({ fetch }) 
{	const res = await fetch(`https://raw.githubusercontent.com/joshnicholas/Archives/main/Archive/feed/latest.json`);	
const item = await res.json();
return { item };}


export const config = {
	isr: {
		// Expiration time (in seconds) before the cached asset will be re-generated by invoking the Serverless Function.
		// Setting the value to `false` means it will never expire.
		expiration: 43200,

		// Random token that can be provided in the URL to bypass the cached version of the asset, by requesting the asset
		// with a __prerender_bypass=<token> cookie.
		//
		// Making a `GET` or `HEAD` request with `x-prerender-revalidate: <token>` will force the asset to be re-validated.
		bypassToken: 'Bypasso',

	}
};